@model PointOfSalesSystem.Models.ViewModels.SalesCreateVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{


<div class="form-horizontal">
    <h4>SalesCreateVM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("Item", htmlAttributes: new { @class = "control-label" })
        <div class="col-md-10">
            @Html.DropDownList("Item", new SelectList(Model.Items, "Id", "Name"), "--Select--", new { @class = "form-control" })

        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.SalesNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SalesNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.Label("Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Quantity", new { htmlAttributes = new { @class = "form-control" } })

        </div>
    </div>



    <div class="form-group">
        @Html.Label("SalesPrice", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("SalesPrice", new { htmlAttributes = new { @class = "form-control" } })

        </div>
    </div>

    <div>
        <div class="col-md-1 col-md-offset-1">
            <br>
            <input id="addItem" type="button" value="Add" class="btn btn-info">
        </div>

        <div class="col-md-1 ">
            <br>
            <input type="button" value="Delete" class="btn btn-danger">
        </div>
    </div>

    <div class="col-md-7 col-md-offset-1">
        <table class="table table-hover table-striped table-bordered table-responsive">
            <thead>
                <tr>
                    <th>Sl</th>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Live Total </th>
                    <th>Action </th>
                </tr>


            </thead>
            <tbody id="SalesDetailsTable"></tbody>

        </table>
    </div>













    <div class="form-group">
        @Html.Label("BranchId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BranchId", new SelectList(Model.Branches, "Id", "Name"), "--Select--", new { @class = "form-control" })

        </div>
    </div>

    <div class="form-group">
        @Html.Label("EmployeeInfoId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("EmployeeInfoId", new SelectList(Model.EmployeeInfoes, "Id", "Name"), "--Select--", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalesDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SalesDate, new { htmlAttributes = new { @class = "form-control" } })

        </div>
    </div>






    <div class="form-group">
        @Html.LabelFor(model => model.VAT, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.VAT, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.VAT, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Dicount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Dicount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Dicount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SalesTotalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SalesTotalAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SalesTotalAmount, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        @Html.LabelFor(model => model.PartyId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PartyId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PartyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group-row">

        <div class="col-md-3 col-md-offset-8">
            @*<h6 align="center"><b>Purchase Summary</b><br></h6>*@
            <table class="table table-hover table-striped table-bordered table-responsive">
                <thead>
                    <tr>

                        <th>Total</th>
                        <th>Amount Due</th>
                    </tr>
                </thead>
                <tbody></tbody>

            </table>
        </div>
    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{

    <script src="~/Scripts/POS/Sales/Sales.js"></script>

}
